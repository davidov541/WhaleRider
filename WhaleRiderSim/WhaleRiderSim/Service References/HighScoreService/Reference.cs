//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WhaleRiderSim.HighScoreService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HighScore", Namespace="http://schemas.datacontract.org/2004/07/HighScoreService")]
    [System.SerializableAttribute()]
    public partial class HighScore : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhaleRiderSim.HighScoreService.Platform PlatformIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TransmittedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameTitle {
            get {
                return this.GameTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.GameTitleField, value) != true)) {
                    this.GameTitleField = value;
                    this.RaisePropertyChanged("GameTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhaleRiderSim.HighScoreService.Platform PlatformID {
            get {
                return this.PlatformIDField;
            }
            set {
                if ((this.PlatformIDField.Equals(value) != true)) {
                    this.PlatformIDField = value;
                    this.RaisePropertyChanged("PlatformID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Transmitted {
            get {
                return this.TransmittedField;
            }
            set {
                if ((this.TransmittedField.Equals(value) != true)) {
                    this.TransmittedField = value;
                    this.RaisePropertyChanged("Transmitted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Platform", Namespace="http://schemas.datacontract.org/2004/07/HighScoreService")]
    public enum Platform : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windows = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WindowsPhone = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Surface = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HighScoreService.IHighScoreService")]
    public interface IHighScoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHighScoreService/AddHighScore", ReplyAction="http://tempuri.org/IHighScoreService/AddHighScoreResponse")]
        void AddHighScore(WhaleRiderSim.HighScoreService.HighScore hs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHighScoreService/GetHighScoresGlobally", ReplyAction="http://tempuri.org/IHighScoreService/GetHighScoresGloballyResponse")]
        WhaleRiderSim.HighScoreService.HighScore[] GetHighScoresGlobally(string gameTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHighScoreService/GetHighScoresForPlatform", ReplyAction="http://tempuri.org/IHighScoreService/GetHighScoresForPlatformResponse")]
        WhaleRiderSim.HighScoreService.HighScore[] GetHighScoresForPlatform(WhaleRiderSim.HighScoreService.Platform p, string gameTitle);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHighScoreServiceChannel : WhaleRiderSim.HighScoreService.IHighScoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HighScoreServiceClient : System.ServiceModel.ClientBase<WhaleRiderSim.HighScoreService.IHighScoreService>, WhaleRiderSim.HighScoreService.IHighScoreService {
        
        public HighScoreServiceClient() {
        }
        
        public HighScoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HighScoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HighScoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HighScoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddHighScore(WhaleRiderSim.HighScoreService.HighScore hs) {
            base.Channel.AddHighScore(hs);
        }
        
        public WhaleRiderSim.HighScoreService.HighScore[] GetHighScoresGlobally(string gameTitle) {
            return base.Channel.GetHighScoresGlobally(gameTitle);
        }
        
        public WhaleRiderSim.HighScoreService.HighScore[] GetHighScoresForPlatform(WhaleRiderSim.HighScoreService.Platform p, string gameTitle) {
            return base.Channel.GetHighScoresForPlatform(p, gameTitle);
        }
    }
}
